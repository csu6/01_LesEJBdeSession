package com.etudiant.formation;

import java.io.*;
import java.text.SimpleDateFormat;
import java.util.*;

import javax.ejb.LocalBean;
import javax.ejb.Stateless;

// Bean de session sans état (stateless)
/**
 * Session Bean implementation class Calculette
 */
@Stateless
@LocalBean
public class Calculette implements CalculetteRemote/*, CalculetteLocal*/ {

    /**
     * Default constructor. 
     */
    public Calculette() {
        // TODO Auto-generated constructor stub
    }
    
    public double calculer(String operateur, double df1, double df2) throws Exception {
    	ecrire_log("Operation: " + df1 + " " + operateur + " " + df2);
    	
    	if( operateur.equals("+")) {
    		return df1 + df2;
    	} else if( operateur.equals("-")) {
    		return df1 - df2;
    	} else if( operateur.equals("*")) {
    		return df1 * df2;
    	}else if( operateur.equals("/")) {
    		double resultat = df1 / df2;
    		if(
    				resultat == Double.NEGATIVE_INFINITY
    				||
    				resultat == Double.POSITIVE_INFINITY
    			) {
    			ecrire_log("Division par zéro");
    			throw new Exception("Division par zéro");
    		}
    		return (df1 / df2);
    	} else {
    		throw new Exception("Operateur inconnu: " + operateur);
    	}
    }
    
    public static void ecrire_log(String message) {
    	// Créer un bjet de formatage de date de SDF (SimpleDateFormat)
    	
    	SimpleDateFormat sdf = new SimpleDateFormat("dd/MM/yyyy HH:mm:ss");
    	
    	String fichier_journalisation = "C:\\journaux_ejb\\journalCalculette.txt";

    	try {
        	// ouvrir un stream (un flux) vers le fichier de journalisation
			FileWriter fw = new FileWriter(fichier_journalisation);
			
			fw.write(sdf.format(new Date() + ": " + message + System.getProperty("line.separator")));
			fw.close();
		} catch (IOException ex) {
			System.out.println(
						"\n\n"
						+ "Une exception a été rencontrée:\n " 
						+ "Source: Calculette \n" 
						+ "Message: "
						+ ex.getMessage()
						+"\n\n"
					);
		}
    }

}
